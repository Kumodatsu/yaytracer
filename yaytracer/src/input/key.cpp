#include "key.hpp"

namespace yay {

  std::ostream& operator << (std::ostream& stream, Key key) {
    switch (key) {
      case Key::Space:          return stream << "Space";
      case Key::Apostrophe:     return stream << "Apostrophe";
      case Key::Comma:          return stream << "Comma";
      case Key::Minus:          return stream << "Minus";
      case Key::Period:         return stream << "Period";
      case Key::Slash:          return stream << "Slash";
      case Key::Number0:        return stream << "Number0";
      case Key::Number1:        return stream << "Number1";
      case Key::Number2:        return stream << "Number2";
      case Key::Number3:        return stream << "Number3";
      case Key::Number4:        return stream << "Number4";
      case Key::Number5:        return stream << "Number5";
      case Key::Number6:        return stream << "Number6";
      case Key::Number7:        return stream << "Number7";
      case Key::Number8:        return stream << "Number8";
      case Key::Number9:        return stream << "Number9";
      case Key::Semicolon:      return stream << "Semicolon";
      case Key::Equal:          return stream << "Equal";
      case Key::A:              return stream << "A";
      case Key::B:              return stream << "B";
      case Key::C:              return stream << "C";
      case Key::D:              return stream << "D";
      case Key::E:              return stream << "E";
      case Key::F:              return stream << "F";
      case Key::G:              return stream << "G";
      case Key::H:              return stream << "H";
      case Key::I:              return stream << "I";
      case Key::J:              return stream << "J";
      case Key::K:              return stream << "K";
      case Key::L:              return stream << "L";
      case Key::M:              return stream << "M";
      case Key::N:              return stream << "N";
      case Key::O:              return stream << "O";
      case Key::P:              return stream << "P";
      case Key::Q:              return stream << "Q";
      case Key::R:              return stream << "R";
      case Key::S:              return stream << "S";
      case Key::T:              return stream << "T";
      case Key::U:              return stream << "U";
      case Key::V:              return stream << "V";
      case Key::W:              return stream << "W";
      case Key::X:              return stream << "X";
      case Key::Y:              return stream << "Y";
      case Key::Z:              return stream << "Z";
      case Key::LeftBracket:    return stream << "LeftBracket";
      case Key::Backslash:      return stream << "Backslash";
      case Key::RightBracket:   return stream << "RightBracket";
      case Key::Grave:          return stream << "Grave";
      case Key::World1:         return stream << "World1";
      case Key::World2:         return stream << "World2";
      case Key::Escape:         return stream << "Escape";
      case Key::Enter:          return stream << "Enter";
      case Key::Tab:            return stream << "Tab";
      case Key::Backspace:      return stream << "Backspace";
      case Key::Insert:         return stream << "Insert";
      case Key::Delete:         return stream << "Delete";
      case Key::Right:          return stream << "Right";
      case Key::Left:           return stream << "Left";
      case Key::Down:           return stream << "Down";
      case Key::Up:             return stream << "Up";
      case Key::PageUp:         return stream << "PageUp";
      case Key::PageDown:       return stream << "PageDown";
      case Key::Home:           return stream << "Home";
      case Key::End:            return stream << "End";
      case Key::CapsLock:       return stream << "CapsLock";
      case Key::ScrollLock:     return stream << "ScrollLock";
      case Key::NumLock:        return stream << "NumLock";
      case Key::PrintScreen:    return stream << "PrintScreen";
      case Key::Pause:          return stream << "Pause";
      case Key::F1:             return stream << "F1";
      case Key::F2:             return stream << "F2";
      case Key::F3:             return stream << "F3";
      case Key::F4:             return stream << "F4";
      case Key::F5:             return stream << "F5";
      case Key::F6:             return stream << "F6";
      case Key::F7:             return stream << "F7";
      case Key::F8:             return stream << "F8";
      case Key::F9:             return stream << "F9";
      case Key::F10:            return stream << "F10";
      case Key::F11:            return stream << "F11";
      case Key::F12:            return stream << "F12";
      case Key::F13:            return stream << "F13";
      case Key::F14:            return stream << "F14";
      case Key::F15:            return stream << "F15";
      case Key::F16:            return stream << "F16";
      case Key::F17:            return stream << "F17";
      case Key::F18:            return stream << "F18";
      case Key::F19:            return stream << "F19";
      case Key::F20:            return stream << "F20";
      case Key::F21:            return stream << "F21";
      case Key::F22:            return stream << "F22";
      case Key::F23:            return stream << "F23";
      case Key::F24:            return stream << "F24";
      case Key::F25:            return stream << "F25";
      case Key::NumPad0:        return stream << "NumPad0";
      case Key::NumPad1:        return stream << "NumPad1";
      case Key::NumPad2:        return stream << "NumPad2";
      case Key::NumPad3:        return stream << "NumPad3";
      case Key::NumPad4:        return stream << "NumPad4";
      case Key::NumPad5:        return stream << "NumPad5";
      case Key::NumPad6:        return stream << "NumPad6";
      case Key::NumPad7:        return stream << "NumPad7";
      case Key::NumPad8:        return stream << "NumPad8";
      case Key::NumPad9:        return stream << "NumPad9";
      case Key::NumPadDecimal:  return stream << "NumPadDecimal";
      case Key::NumPadDivide:   return stream << "NumPadDivide";
      case Key::NumPadMultiply: return stream << "NumPadMultiply";
      case Key::NumPadSubtract: return stream << "NumPadSubtract";
      case Key::NumPadAdd:      return stream << "NumPadAdd";
      case Key::NumPadEnter:    return stream << "NumPadEnter";
      case Key::NumPadEqual:    return stream << "NumPadEqual";
      case Key::LeftShift:      return stream << "LeftShift";
      case Key::LeftControl:    return stream << "LeftControl";
      case Key::LeftAlt:        return stream << "LeftAlt";
      case Key::LeftSuper:      return stream << "LeftSuper";
      case Key::RightShift:     return stream << "RightShift";
      case Key::RightControl:   return stream << "RightControl";
      case Key::RightAlt:       return stream << "RightAlt";
      case Key::RightSuper:     return stream << "RightSuper";
      case Key::Menu:           return stream << "Menu";
      default:                  return stream << "Unknown";
    }
  }

}
